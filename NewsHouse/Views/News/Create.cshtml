@model NewsHouse.Models.ViewModel.NewsVM

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm("Create", "News", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <hr />
    <div class="container">
        <div class="row">
            <!-- Main Form Column -->
            <div class="col-12 col-lg-6 mb-4">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.NewsBody, htmlAttributes: new { @class = "control-label" })
                    @Html.TextAreaFor(model => model.NewsBody, new { @class = "form-control", rows = 6, style = "resize:vertical;" })
                    @Html.ValidationMessageFor(model => model.NewsBody, "", new { @class = "text-danger" })
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.HeaderImage, htmlAttributes: new { @class = "control-label" })
                    @Html.TextBoxFor(m => m.HeaderImage, new { type = "file", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.HeaderImage, "", new { @class = "text-danger" })
                </div>

                <div class="form-group form-check">
                    @Html.EditorFor(model => model.IsArchived, new { htmlAttributes = new { @class = "form-check-input" } })
                    @Html.LabelFor(model => model.IsArchived, htmlAttributes: new { @class = "form-check-label" })
                    @Html.ValidationMessageFor(model => model.IsArchived, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Published, htmlAttributes: new { @class = "control-label" })
                    <input type="datetime-local" name="dateTime" />
                </div>
            </div>

            <!-- Categories Column -->
            <div class="col-12 col-lg-3 mb-4">
                <h2>Categories</h2>
                <div class="d-flex justify-content-end mb-3">
                    <a href="#" id="btnPlus" class="btn btn-primary btn-sm">
                        <i class="fa fa-plus-circle"></i> Add New
                    </a>
                </div>
                <div id="container">
                    @Html.Action("AddNewCategory", "News")
                </div>
            </div>

            <!-- Tags Column -->
            <div class="col-12 col-lg-3 mb-4">
                <h2>Tags</h2>
                <div class="d-flex justify-content-end mb-3">
                    <a href="#" id="btnPlusTag" class="btn btn-primary btn-sm">
                        <i class="fa fa-plus-circle"></i> Add New
                    </a>
                </div>
                <div id="tagcontainer">
                    @Html.Action("AddNewTag", "News")
                </div>
            </div>
        </div>

        <!-- Submit button -->
        <div class="form-group mt-3">
            <input type="submit" value="Create" class="btn btn-success" />
        </div>
    </div>
}

<div class="mt-3">
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
